#!/bin/bash
#
# This script triggers (re)build of the specified project on Travis CI.
#
# It expects Travis token to be set in environment variable TRAVIS_TOKEN.
# To get a token, run: travis token.
#
# Usage:
#   travis-build-dependent [<REMOTE>] <BRANCH>
#
#   REPO_SLUG  the repository to build, typically username/project-name.
#   BRANCH     the branch to build (default is 'master').

read -d ''  help_text  <<- _EOF_  
Script used to trigger travis builds for the current repository.
Usage: travis-trigger-build [<REMOTE>] <BRANCH>
            REMOTE remote to trigger build for [default=origin] \
(must have TRAVIS_TOKEN with authorization for that remote)
            BRANCH the branch to build (required)
_EOF_

# check for helpflags
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    echo "$help_text"
    exit 0
fi

# default
REMOTE="origin"

if [[ "$#" -gt 1 ]]; then
    REMOTE=$1
    BRANCH=${2:-master}
else
    BRANCH=${1:-master}
fi

# use the repo slug script to parse out the username/repo
# from the requested remote
REPO_SLUG=$(_repo_slug ${REMOTE})
echo $REPO_SLUG

# json template for post request
body="{ 'request': { 'message': '$message', 'branch': '$BRANCH' }}"

echo "Triggering build of $REPO_SLUG branch $BRANCH on Travis."
# setup curl POST request call
CODE=$(curl -X POST \
          -H "Content-Type: application/json" `# html header settings` \
          -H "Accept: application/json" \
          -H "Travis-API-Version: 3" \
          -H "Authorization: token $TRAVIS_TOKEN" `# get token from env var` \
          -d "${body//\'/\"}" `# insert body template here with formatting` \
          --output /dev/null `# send all returned output to null` \
          --write-out "%{http_code}" `# html code as output` \
          --silent `# shhhhh` \
          https://api.travis-ci.org/repo/${REPO_SLUG/\//%2F}/requests) `# url template`

# some output to user about status
if test "$CODE" -lt "300"; then
    echo "Triggered by successful build of $TRAVIS_REPO_SLUG"
    echo "RET CODE: $CODE"    
    echo "SUCCESS"
else
    echo "RET CODE: $CODE"    
    echo "ERROR"
fi
