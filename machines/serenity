#!/bin/bash

# pyenv variables

export PYENV_ROOT=$HOME/.pyenv/
export PATH=$PYENV_ROOT/bin:$PATH
export PATH=$HOME/opt/paraview/ParaView-5.7.0-RC4-MPI-Linux-Python3.7-64bit/bin:$PATH
export PATH=$HOME/opt/pdfgrep/bin:$PATH

eval "$(pyenv init -)"
eval "$(pyenv init --path)"

pyenv shell 3.6.6

alias visit='~/opt/visit/visit3_2_1.linux-x86_64/bin/visit'
alias trelis='/opt/Trelis-16.5/bin/trelis -nojournal'
alias trelis17='/opt/Trelis-17.0/bin/trelis -nojournal'

alias bear-in-winter='sudo echo "Hibernating..." && gnome-screensaver-command -l && sudo pm-hibernate'

function docker-run-img() {
    docker run -it --net=host \
           --device /dev/dri/ \
           -e DISPLAY=$DISPLAY \
           -e XAUTHORITY=$XAUTHORITY \
           -v "/tmp/.X11-unix:/tmp/.X11-unix:rw" \
           -v "$HOME/.Xauthority:$DOCKER_HOME/.Xauthority/:rw" \
           -v "$HOME/.Xauthority-n:$DOCKER_HOME/.Xauthority-n/:rw" \
           -v $XAUTHORITY $1 bash
}

if [ "/bin/bash" != "$BASH" ]; then
    function _docker-run-img {
        local state

        _arguments -C \
                   '1:images:($(docker images --format "{{.Repository}}:{{.Tag}}" | grep -v "<none>"))' \
                   '*::arg->args'
    }

    compdef _docker-run-img docker-run-img
fi

###########################################
### ENVIRONMENTS FOR OTHER APPLICATIONS ###
###########################################

function env_exp_openmc() {
    # EXECUTABLES
    PATH=$HOME/opt/moab/bin:$PATH
    PATH=$HOME/opt/dagmc/bin/:$HOME/opt/dagmc/tools/:$PATH
    PATH=$HOME/opt/openmc_exp/bin/:$HOME/.local/bin:$PATH
    PATH=$HOME/opt/openmc_exp/openmc/scripts/:$PATH
    PATH=$HOME/opt/njoy/bin:$PATH
    PATH=$HOME/opt/openmc-plotgui:$PATH

    pyenv shell 3.8.0

    # DATA
    export OPENMC_MULTIPOLE_LIBRARY=$HOME/opt/openmc/xs/WMP_Library
    export OPENMC_CROSS_SECTIONS=$HOME/opt/openmc/xs/nndc_hdf5/cross_sections.xml
    export OPENMC_ENDF_DATA=$HOME/opt/openmc/xs/endf-b-vii.1/

    # for testing
    export OMP_NUM_THREADS=2

    PYTHONPATH=/home/shriwise/opt/moab/lib/python3.9/site-packages:$PYTHONPATH

    # export environment varialbers
    export_environment_vars

    echo "Adding Experimental OpenMC to environment"
}

function env_openmc() {
    # EXECUTABLES
    PATH=$HOME/opt/moab/bin:$PATH
    PATH=$HOME/opt/dagmc/bin/:$HOME/opt/dagmc/tools/:$PATH
    PATH=$HOME/opt/openmc/bin/:$HOME/.local/bin:$PATH
    PATH=$HOME/opt/openmc/openmc/scripts/:$PATH
    PATH=$HOME/opt/njoy/bin:$PATH
    PATH=$HOME/opt/openmc-plotgui:$PATH

    pyenv shell 3.9.1

    # Still need MOAB's shared libraries depending on it's install method
    # (autotools vs. CMake)
    LD_LIBRARY_PATH=$HOME/opt/moab/lib:$LD_LIBRARY_PATH

    # DATA
    export OPENMC_MULTIPOLE_LIBRARY=$HOME/opt/openmc/xs/WMP_Library
    export OPENMC_CROSS_SECTIONS=$HOME/opt/openmc/xs/nndc_hdf5/cross_sections.xml
    export OPENMC_ENDF_DATA=$HOME/opt/openmc/xs/endf-b-vii.1/

    # for testing
    export OMP_NUM_THREADS=2

    PYTHONPATH=/home/shriwise/opt/moab/lib/python3.9/site-packages:$PYTHONPATH

    # export environment varialbers
    export_environment_vars

    echo "Adding OpenMC to environment"
}

function env_enrico() {

    export OPENMC_CROSS_SECTIONS=/home/shriwise/opt/enrico/xs/endfb71_hdf5/cross_sections.xml
    export FC=/usr/bin/mpifort
    export F90=/usr/bin/mpif90
    export CXX=/usr/bin/mpic++
    export CC=/usr/bin/mpicc
    export HDF5_ROOT=/usr/lib/x86_64-linux-gnu/hdf5/serial/
}

function env_cardinal() {
    # set environment for conda MPI compilers
    export MPICH_FC=gfortran
    export HDF5_ROOT=/usr/lib/x86_64-linux-gnu/hdf5/mpich/
    export NEKRS_HOME=$HOME/opt/cardinal/install/
    export OPENMC_CROSS_SECTIONS=$HOME/opt/openmc/xs/endfb71_hdf5/cross_sections.xml
    export MOOSE_DIR=$HOME/opt/cardinal/contrib/moose

    export PATH=$HOME/opt/cardinal/:$HOME/opt/cardinal/install/bin:$PATH
    export PATH=$HOME/opt/cardinal/contrib/moose/libmesh/installed/bin:$PATH
}

function env_yt() {
    # EXECUTABLES
    PATH=$HOME/opt/moab/bin:$PATH
    PATH=$HOME/opt/dagmc/bin/:$HOME/opt/dagmc/tools/:$PATH
    PATH=$HOME/opt/openmc/bin/:$HOME/.local/bin:$PATH
    PATH=$HOME/opt/openmc/openmc/scripts/:$PATH
    PATH=$HOME/opt/njoy/src/build:$PATH
    PATH=$HOME/opt/openmc-plotgui:$PATH

    pyenv shell 3.9.1

    # SHARED LIBRARIES
    LD_LIBRARY_PATH=$HOME/opt/moab/lib:$LD_LIBRARY_PATH
    LD_LIBRARY_PATH=$HOME/opt/dagmc/lib:$LD_LIBRARY_PATH
    LD_LIBRARY_PATH=$HOME/opt/openmc/lib:$LD_LIBRARY_PATH

    # DATA
    export OPENMC_MULTIPOLE_LIBRARY=$HOME/opt/openmc/xs/WMP_Library
    export OPENMC_CROSS_SECTIONS=$HOME/opt/openmc/xs/nndc_hdf5/cross_sections.xml
    export OPENMC_ENDF_DATA=$HOME/opt/openmc/xs/endf-b-vii.1/

    # for testing
    export OMP_NUM_THREADS=2

    PYTHONPATH=/home/shriwise/opt/moab/lib/python3.9/site-packages:$PYTHONPATH

    # export environment varialbers
    export_environment_vars

    echo "Adding OpenMC to environment"
}

function env_holos () {

    env_openmc
    # override num threads for testing
    export OMP_NUM_THREADS=6
    export OPENMC_CROSS_SECTIONS=$HOME/opt/openmc/xs/mcnp_endfb70/cross_sections.xml
}

function env_stream() {
    # EXECUTABLES
    PATH=$HOME/opt/moab/bin:$PATH
    PATH=$HOME/opt/dagmc/bin/:$HOME/opt/dagmc/tools/:$PATH
    PATH=$HOME/opt/openmc/bin/:$HOME/.local/bin:$PATH
    PATH=$HOME/opt/openmc/openmc/scripts/:$PATH
    PATH=$HOME/opt/njoy/src/build:$PATH

    pyenv shell 3.6.6

    # SHARED LIBRARIES
    LD_LIBRARY_PATH=$HOME/opt/moab/lib:$LD_LIBRARY_PATH
    LD_LIBRARY_PATH=$HOME/opt/dagmc/lib:$LD_LIBRARY_PATH
    LD_LIBRARY_PATH=$HOME/opt/openmc/lib:$LD_LIBRARY_PATH

    # DATA
    export OPENMC_MULTIPOLE_LIBRARY=$HOME/opt/openmc/xs/WMP_Library
    export OPENMC_CROSS_SECTIONS=$HOME/opt/openmc/xs/jeff-3.2-hdf5/cross_sections.xml
    export OPENMC_ENDF_DATA=$HOME/opt/openmc/xs/endf-b-vii.1/

    # export environment varialbers
    export_environment_vars

    echo "Adding OpenMC to environment"
}

function env_mcnp() {
    export PATH=/home/shriwise/opt/mcnp/mcnp6/MCNP_CODE/bin:$PATH
    export DATAPATH=/home/shriwise/opt/mcnp/mcnp6/MCNP_DATA
    export ISCDATA=/home/shriwise/opt/mcnp/mcnp6/MCNP_CODE/MCNP620/Utilities/ISC/data
    # MCNP Datapath
    export DATAPATH=/home/shriwise/storage/mcnp6.2/Disc1/MCNP_DATA_620/xsdir
}

function env_dd() {
    # EXECUTABLES
    PATH=$HOME/opt/moab/bin:$PATH
    PATH=$HOME/opt/dagmc_dd/bin/:$HOME/opt/dagmc_dd/tools/:$PATH
    PATH=$HOME/opt/embree/bin/embree2:$PATH
    PATH=$HOME/opt/embree/bin/embree3:$PATH

    pyenv shell 3.9.1

    # SHARED LIBRARIES
    LD_LIBRARY_PATH=$HOME/opt/moab/lib:$LD_LIBRARY_PATH
    LD_LIBRARY_PATH=$HOME/opt/dagmc_dd/lib:$LD_LIBRARY_PATH
    LD_LIBRARY_PATH=$HOME/opt/embree/lib/:$LD_LIBRARY_PATH
    LD_LIBRARY_PATH=$HOME/opt/double-down/lib:$LD_LIBRARY_PATH
    # export environment varialbers
    export_environment_vars

    echo "Adding Embree/Double-Down to environment"
}


function env_pyne() {
    # EXECUTABLES
    PATH=$HOME/.local/bin/:$PATH

    pyenv shell 3.6.6

    # SHARED LIBRARIES
    LD_LIBRARY_PATH=$HOME/opt/moab/lib:$LD_LIBRARY_PATH
    LD_LIBRARY_PATH=$HOME/opt/dagmc/lib:$LD_LIBRARY_PATH

    PYTHONPATH=$HOME/opt/moab/lib/python2.7/site-packages/:$PYTHONPATH

    # export environment varialbers
    export_environment_vars

    echo "Environment set for PyNE development"
}

function env_trelis() {
    # EXECUTABLES
    PATH=$HOME/opt/moab/bin:$PATH
    PATH=$HOME/opt/dagmc/bin/:$HOME/opt/dagmc/tools/:$PATH

    # SHARED LIBRARIES
    LD_LIBRARY_PATH=$HOME/opt/moab/lib:$LD_LIBRARY_PATH
    LD_LIBRARY_PATH=$HOME/opt/dagmc/lib:$LD_LIBRARY_PATH

    PYTHONPATH=/opt/Trelis-16.5/bin/:$PYTHONPATH
}

function env_pyarc_py2() {
    pyenv shell system

    export PYTHONPATH=$HOME/opt/workbench/Workbench-Linux/:$PYTHONPATH
    export PYTHONPATH=$HOME/internal/nse/neams_workbench/workbench_data/PyARC:$PYTHONPATH
}

# convenience for exporting environment variables together
function export_environment_vars() {
    export PATH
    export LD_LIBRARY_PATH
    export HDF5_ROOT
    export PYTHONPATH
}

function docker_run_x11() {
    docker run -it --net=host \
       --hostname "neams-workbench" \
       --device /dev/dri/ \
       -e DISPLAY=$DISPLAY \
       -v "$HOME/.Xauthority:$DOCKER_HOME/.Xauthority/:rw" \
       -v "$HOME/.Xauthority-n:$DOCKER_HOME/.Xauthority-n/:rw" \
       -v "/tmp/.X11-unix:/tmp/.X11-unix:rw" \
       $1 bash
}

function env_conda() {
    eval "$(/home/shriwise/opt/miniconda3/bin/conda shell.zsh hook)"
}

alias swc_run='docker run -it --net=host -e DISPLAY=:0 -v /tmp/.X11-unix:/tmp/.X11-unix -v /home/shriwise/Downloads:/home/shriwise/Downloads swc_python:latest /bin/bash'

###############
# SSH Aliases #
###############
alias ssh-jack='ssh -t wiley "ssh jack"'
alias ssh-gary='ssh -t wiley "ssh gary"'
alias ssh-wiley='ssh wiley'
alias anl_vpn="tmux new -d 'ssh homes-gce'"

# Fix weird QT warning
unset XDG_SESSION_TYPE
