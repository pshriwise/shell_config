#!/bin/bash

#######################
# Python Environments #
#######################
export PYENV_ROOT=$HOME/.pyenv/
export PATH=$PYENV_ROOT/bin:$PATH
eval "$(pyenv init -)"
eval "$(pyenv init --path)"

# default pyenv shell
pyenv shell 3.9.2

##############################
# Pre-packaged Installations #
##############################
export PATH=$HOME/soft/paraview/bin:$PATH

alias cubit='clarox -nojournal'
alias coreform_cubit='HDF5_DISABLE_VERSION_CHECK=1 coreform_cubit -nojournal'

####################
# Custom Functions #
####################
function docker-run-x11() {
    docker run -it --net=host \
           --device /dev/dri/ \
           -e DISPLAY=$DISPLAY \
           -e XAUTHORITY=$XAUTHORITY \
           -v "/tmp/.X11-unix:/tmp/.X11-unix:rw" \
           -v "$HOME/.Xauthority:$DOCKER_HOME/.Xauthority/:rw" \
           -v "$HOME/.Xauthority-n:$DOCKER_HOME/.Xauthority-n/:rw" \
           -v $XAUTHORITY $1 bash
}

if [ "/bin/bash" != "$BASH" ]; then
    function _docker-run-x11 {
        local state

        _arguments -C \
                   '1:images:($(docker images --format "{{.Repository}}:{{.Tag}}" | grep -v "<none>"))' \
                   '*::arg->args'
    }

    compdef _docker-run-img docker-run-img
fi

#########################
# Environment Functions #
#########################
function export_environment_vars() {
    export PATH
    export LD_LIBRARY_PATH
    export HDF5_ROOT
    export PYTHONPATH
}

function env_cubit() {
    export PATH=$PATH:$HOME/soft/cubit/Cubit-15.5/bin
    export PATH=$PATH:/opt/Coreform-Cubit-2021.11/bin/
}


function env_conda() {
    eval "$(/home/shriwise/opt/miniconda3/bin/conda shell.zsh hook)"
}

function env_openmc() {

    # EXECUTABLES
    PATH=$HOME/opt/bin:$HOME/.local/bin:$PATH
    PATH=$HOME/opt/njoy/bin:$PATH

    pyenv shell 3.9.1

    # Still need MOAB's shared libraries depending on it's install method
    # (autotools vs. CMake)
    LD_LIBRARY_PATH=$HOME/opt/moab/lib:$LD_LIBRARY_PATH

    # DATA
    export OPENMC_XS_DIR=$HOME/data/xs/openmc
    export OPENMC_MULTIPOLE_LIBRARY=$OPENMC_XS_DIR/WMP_Library
    export OPENMC_CROSS_SECTIONS=$OPENMC_XS_DIR/nndc_hdf5/cross_sections.xml
    export OPENMC_ENDF_DATA=$OPENMC_XS_DIR/endf-b-vii.1

    # for testing
    export OMP_NUM_THREADS=2

    PYTHONPATH=/home/shriwise/opt/moab/lib/python3.9/site-packages:$PYTHONPATH

    # export environment varialbers
    export_environment_vars

    echo "Adding OpenMC to environment"
}

function env_mcnp() {
    ##### path for mcnp620
    PATH="/home/pshriwise/soft/rsicc/mcnp-6.2/MCNP_CODE/bin:$PATH"
    export PATH

    ##### path for data
    DATAPATH="/home/pshriwise/soft/rsicc/mcnp-6.2/MCNP_DATA"
    export DATAPATH
}


function env_pyarc() {
    export PYTHONPATH=$HOME/internal/nse/pyarc/soft/PyARC:$PYTHONPATH

}

function env_pygriffin() {
    export PYTHONPATH=$HOME/internal/nse/pyarc/soft/PyGriffin:$PYTHONPATH
}

function env_workbench() {
    export PATH=$HOME/internal/nse/pyarc/soft/workbench/Workbench-4.1.1/bin:$PATH
    export PATH=$HOME/internal/nse/pyarc/soft/workbench/Workbench-4.1.1/rte:$PATH
    alias python-workbench='entry.sh'
}

function env_mcnp() {
    ##### path for mcnp620
    export PATH
    PATH="/home/pshriwise/soft/rsicc/mcnp-6.2/MCNP_CODE/bin:$PATH"


    ##### path for data
    export DATAPATH
    DATAPATH="/home/pshriwise/soft/rsicc/mcnp-6.2/MCNP_DATA"


    ##### path for data
    export ISCDATA
    ISCDATA="/home/pshriwise/soft/rsicc/mcnp-6.2/MCNP_CODE/MCNP620/Utilities/ISC/data"

    ulimit -s unlimited
}

###############
# SSH Aliases #
###############
alias anl_vpn="tmux new -d 'ssh homes-gce'"
